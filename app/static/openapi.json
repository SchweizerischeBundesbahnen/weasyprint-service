{
  "openapi": "3.1.0",
  "info": {
    "title": "WeasyPrint Service API",
    "version": "1.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Health check",
        "description": "Returns health status with optional detailed metrics. Use ?detailed=true for JSON response with metrics.",
        "operationId": "getHealth",
        "parameters": [
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return detailed JSON response with metrics",
              "default": false,
              "title": "Detailed"
            },
            "description": "Return detailed JSON response with metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$defs": {
                    "ChromiumMetricsSchema": {
                      "description": "Schema for Chromium performance and health metrics",
                      "properties": {
                        "total_conversions": {
                          "description": "Total successful SVG to PNG conversions",
                          "title": "Total Conversions",
                          "type": "integer"
                        },
                        "failed_conversions": {
                          "description": "Total failed conversion attempts",
                          "title": "Failed Conversions",
                          "type": "integer"
                        },
                        "error_rate_percent": {
                          "description": "Error rate as percentage",
                          "title": "Error Rate Percent",
                          "type": "number"
                        },
                        "total_restarts": {
                          "description": "Total browser restarts since startup",
                          "title": "Total Restarts",
                          "type": "integer"
                        },
                        "avg_conversion_time_ms": {
                          "description": "Average conversion time in milliseconds",
                          "title": "Avg Conversion Time Ms",
                          "type": "number"
                        },
                        "last_health_check": {
                          "description": "Timestamp of last health check (Unix time)",
                          "title": "Last Health Check",
                          "type": "number"
                        },
                        "last_health_status": {
                          "description": "Result of last health check (true=healthy)",
                          "title": "Last Health Status",
                          "type": "boolean"
                        },
                        "consecutive_failures": {
                          "description": "Current consecutive conversion failures",
                          "title": "Consecutive Failures",
                          "type": "integer"
                        },
                        "uptime_seconds": {
                          "description": "Browser uptime in seconds",
                          "title": "Uptime Seconds",
                          "type": "number"
                        }
                      },
                      "required": [
                        "total_conversions",
                        "failed_conversions",
                        "error_rate_percent",
                        "total_restarts",
                        "avg_conversion_time_ms",
                        "last_health_check",
                        "last_health_status",
                        "consecutive_failures",
                        "uptime_seconds"
                      ],
                      "title": "ChromiumMetricsSchema",
                      "type": "object"
                    }
                  },
                  "description": "Schema for detailed health status response",
                  "properties": {
                    "status": {
                      "description": "Overall health status: healthy or unhealthy",
                      "title": "Status",
                      "type": "string"
                    },
                    "chromium_running": {
                      "description": "Whether Chromium browser is running",
                      "title": "Chromium Running",
                      "type": "boolean"
                    },
                    "chromium_version": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "Chromium version if available",
                      "title": "Chromium Version"
                    },
                    "health_monitoring_enabled": {
                      "description": "Whether background health monitoring is active",
                      "title": "Health Monitoring Enabled",
                      "type": "boolean"
                    },
                    "metrics": {
                      "$ref": "#/$defs/ChromiumMetricsSchema",
                      "description": "Performance and health metrics"
                    }
                  },
                  "required": [
                    "status",
                    "chromium_running",
                    "chromium_version",
                    "health_monitoring_enabled",
                    "metrics"
                  ],
                  "title": "HealthSchema",
                  "type": "object"
                }
              },
              "text/plain": {
                "example": "OK"
              }
            }
          },
          "503": {
            "content": {
              "text/plain": {
                "example": "Service Unavailable"
              },
              "application/json": {
                "schema": {
                  "$defs": {
                    "ChromiumMetricsSchema": {
                      "description": "Schema for Chromium performance and health metrics",
                      "properties": {
                        "total_conversions": {
                          "description": "Total successful SVG to PNG conversions",
                          "title": "Total Conversions",
                          "type": "integer"
                        },
                        "failed_conversions": {
                          "description": "Total failed conversion attempts",
                          "title": "Failed Conversions",
                          "type": "integer"
                        },
                        "error_rate_percent": {
                          "description": "Error rate as percentage",
                          "title": "Error Rate Percent",
                          "type": "number"
                        },
                        "total_restarts": {
                          "description": "Total browser restarts since startup",
                          "title": "Total Restarts",
                          "type": "integer"
                        },
                        "avg_conversion_time_ms": {
                          "description": "Average conversion time in milliseconds",
                          "title": "Avg Conversion Time Ms",
                          "type": "number"
                        },
                        "last_health_check": {
                          "description": "Timestamp of last health check (Unix time)",
                          "title": "Last Health Check",
                          "type": "number"
                        },
                        "last_health_status": {
                          "description": "Result of last health check (true=healthy)",
                          "title": "Last Health Status",
                          "type": "boolean"
                        },
                        "consecutive_failures": {
                          "description": "Current consecutive conversion failures",
                          "title": "Consecutive Failures",
                          "type": "integer"
                        },
                        "uptime_seconds": {
                          "description": "Browser uptime in seconds",
                          "title": "Uptime Seconds",
                          "type": "number"
                        }
                      },
                      "required": [
                        "total_conversions",
                        "failed_conversions",
                        "error_rate_percent",
                        "total_restarts",
                        "avg_conversion_time_ms",
                        "last_health_check",
                        "last_health_status",
                        "consecutive_failures",
                        "uptime_seconds"
                      ],
                      "title": "ChromiumMetricsSchema",
                      "type": "object"
                    }
                  },
                  "description": "Schema for detailed health status response",
                  "properties": {
                    "status": {
                      "description": "Overall health status: healthy or unhealthy",
                      "title": "Status",
                      "type": "string"
                    },
                    "chromium_running": {
                      "description": "Whether Chromium browser is running",
                      "title": "Chromium Running",
                      "type": "boolean"
                    },
                    "chromium_version": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "Chromium version if available",
                      "title": "Chromium Version"
                    },
                    "health_monitoring_enabled": {
                      "description": "Whether background health monitoring is active",
                      "title": "Health Monitoring Enabled",
                      "type": "boolean"
                    },
                    "metrics": {
                      "$ref": "#/$defs/ChromiumMetricsSchema",
                      "description": "Performance and health metrics"
                    }
                  },
                  "required": [
                    "status",
                    "chromium_running",
                    "chromium_version",
                    "health_monitoring_enabled",
                    "metrics"
                  ],
                  "title": "HealthSchema",
                  "type": "object"
                }
              }
            },
            "description": "Service is unhealthy"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Service version information",
        "description": "Returns versions of Python, WeasyPrint, the service itself, build timestamp, and Chromium.",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionSchema"
                }
              }
            }
          }
        }
      }
    },
    "/convert/html": {
      "post": {
        "tags": [
          "convert"
        ],
        "summary": "Convert HTML to PDF",
        "description": "Accepts raw HTML in the request body and returns a generated PDF.",
        "operationId": "convert_html_post",
        "parameters": [
          {
            "name": "encoding",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Encoding",
              "description": "Text encoding used to decode the incoming HTML body (e.g., utf-8).",
              "default": "utf-8"
            },
            "description": "Text encoding used to decode the incoming HTML body (e.g., utf-8)."
          },
          {
            "name": "media_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "CSS Media Type",
              "description": "CSS media type to apply when rendering (e.g., 'print' or 'screen').",
              "default": "print"
            },
            "description": "CSS media type to apply when rendering (e.g., 'print' or 'screen')."
          },
          {
            "name": "presentational_hints",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Presentational Hints",
              "description": "Honor presentational HTML attributes as CSS hints.",
              "default": false
            },
            "description": "Honor presentational HTML attributes as CSS hints."
          },
          {
            "name": "base_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Base URL",
              "description": "Base URL used to resolve relative links (stylesheets, images)."
            },
            "description": "Base URL used to resolve relative links (stylesheets, images)."
          },
          {
            "name": "scale_factor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scale Factor",
              "description": "Device scale factor used for SVG/PNG rendering. Overrides DEVICE_SCALE_FACTOR if provided."
            },
            "description": "Device scale factor used for SVG/PNG rendering. Overrides DEVICE_SCALE_FACTOR if provided."
          },
          {
            "name": "file_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output File Name",
              "description": "Filename suggested in the Content-Disposition header.",
              "default": "converted-document.pdf"
            },
            "description": "Filename suggested in the Content-Disposition header."
          },
          {
            "name": "pdf_variant",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "PDF Variant",
              "description": "PDF profile/variant passed to WeasyPrint (e.g., 'pdf/a-2b')."
            },
            "description": "PDF profile/variant passed to WeasyPrint (e.g., 'pdf/a-2b')."
          },
          {
            "name": "custom_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Custom Metadata",
              "description": "Include custom metadata in the generated PDF.",
              "default": false
            },
            "description": "Include custom metadata in the generated PDF."
          }
        ],
        "responses": {
          "200": {
            "description": "PDF file generated from the provided HTML",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "400": {
            "content": {
              "text/plain": {}
            },
            "description": "Invalid Input"
          },
          "500": {
            "content": {
              "text/plain": {}
            },
            "description": "Internal PDF Conversion Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/convert/html-with-attachments": {
      "post": {
        "tags": [
          "convert"
        ],
        "summary": "Convert HTML to PDF with attachments",
        "description": "Accepts HTML as a form field and optional files to be embedded as PDF attachments.",
        "operationId": "convert_html_with_attachments_post",
        "parameters": [
          {
            "name": "encoding",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Encoding",
              "description": "Text encoding used to decode the incoming HTML body (e.g., utf-8).",
              "default": "utf-8"
            },
            "description": "Text encoding used to decode the incoming HTML body (e.g., utf-8)."
          },
          {
            "name": "media_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "CSS Media Type",
              "description": "CSS media type to apply when rendering (e.g., 'print' or 'screen').",
              "default": "print"
            },
            "description": "CSS media type to apply when rendering (e.g., 'print' or 'screen')."
          },
          {
            "name": "presentational_hints",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Presentational Hints",
              "description": "Honor presentational HTML attributes as CSS hints.",
              "default": false
            },
            "description": "Honor presentational HTML attributes as CSS hints."
          },
          {
            "name": "base_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Base URL",
              "description": "Base URL used to resolve relative links (stylesheets, images)."
            },
            "description": "Base URL used to resolve relative links (stylesheets, images)."
          },
          {
            "name": "scale_factor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scale Factor",
              "description": "Device scale factor used for SVG/PNG rendering. Overrides DEVICE_SCALE_FACTOR if provided."
            },
            "description": "Device scale factor used for SVG/PNG rendering. Overrides DEVICE_SCALE_FACTOR if provided."
          },
          {
            "name": "file_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output File Name",
              "description": "Filename suggested in the Content-Disposition header.",
              "default": "converted-document.pdf"
            },
            "description": "Filename suggested in the Content-Disposition header."
          },
          {
            "name": "pdf_variant",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "PDF Variant",
              "description": "PDF profile/variant passed to WeasyPrint (e.g., 'pdf/a-2b')."
            },
            "description": "PDF profile/variant passed to WeasyPrint (e.g., 'pdf/a-2b')."
          },
          {
            "name": "custom_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Custom Metadata",
              "description": "Include custom metadata in the generated PDF.",
              "default": false
            },
            "description": "Include custom metadata in the generated PDF."
          }
        ],
        "responses": {
          "200": {
            "description": "PDF file generated from the provided HTML (with optional attachments)",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "400": {
            "content": {
              "text/plain": {}
            },
            "description": "Invalid Input"
          },
          "500": {
            "content": {
              "text/plain": {}
            },
            "description": "Internal PDF Conversion Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "multipart/form-data with form fields: html — a string containing HTML; files — one or more file attachments. The html field is required. The files field is optional.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "html": {
                    "type": "string",
                    "description": "HTML document content. Can be provided as a regular text form field.",
                    "example": "<html><body><h1>Hello</h1></body></html>"
                  },
                  "files": {
                    "type": "array",
                    "description": "List of files to be embedded into the resulting PDF as attachments. Submit multiple form parts with the same name 'files'.",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": [
                  "html"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersionSchema": {
        "properties": {
          "python": {
            "type": "string",
            "title": "Python",
            "description": "Python version"
          },
          "weasyprint": {
            "type": "string",
            "title": "WeasyPrint",
            "description": "WeasyPrint version"
          },
          "weasyprintService": {
            "type": "string",
            "title": "WeasyPrint Service",
            "description": "Service version"
          },
          "timestamp": {
            "type": "string",
            "title": "Build Timestamp",
            "description": "Build timestamp"
          },
          "chromium": {
            "type": "string",
            "title": "Chromium",
            "description": "Chromium version"
          }
        },
        "type": "object",
        "required": [
          "python",
          "weasyprint",
          "weasyprintService",
          "timestamp",
          "chromium"
        ],
        "title": "VersionSchema",
        "description": "Schema for response /version"
      }
    }
  }
}
